{
  "swagger": "2.0",
  "info": {
    "description": "This is the API for a bookshelf application",
    "version": "1.0.0",
    "title": "Bookshelf API",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs": {
    "description": "Github for API Project",
    "url": "https://github.com/Fashdey/Bookshelf-API"
  },
  "host": "DependsOnYourInstance:0000",
  "basePath": "/api",
  "tags": [
    {
      "name": "book",
      "description": "Data on books served"
    },
    {
      "name": "auhtors",
      "description": "Data on authors (object never made it to project)"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/book": {
      "post": {
        "tags": [
          "book"
        ],
        "summary": "Add a new book to the bookshelf",
        "description": "",
        "operationId": "addBook",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Book object that needs to be added to the bookshelf (Id is optional)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "book"
        ],
        "summary": "Update an existing book",
        "description": "",
        "operationId": "updateBook",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Existing Book object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "book"
        ],
        "summary": "Returns all books",
        "description": "Returns all books in bookshelf",
        "operationId": "getBooks",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Book"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/book/{id}": {
      "get": {
        "tags": [
          "book"
        ],
        "summary": "Find book by ID",
        "description": "Returns a book",
        "operationId": "getBookById",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of book to return",
            "required": true,
            "type": "integer",
            "format": "hex(24)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "book"
        ],
        "summary": "Deletes a book",
        "description": "",
        "operationId": "deletePet",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Book id to delete",
            "required": true,
            "type": "string",
            "format": "hex(24)"
          }
        ],
        "responses": {
          "204": {
            "description": "No content response - at completion"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/book/byYear/{year}": {
      "get": {
        "tags": [
          "book"
        ],
        "summary": "Find books by Year",
        "description": "Returns all books from given year",
        "operationId": "getBooksByYear",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Publish Year wanted returned",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        }
      }
    },
    "/book/byAuthor/{author}": {
      "get": {
        "tags": [
          "book"
        ],
        "summary": "Find books by Year",
        "description": "Returns all books from Author",
        "operationId": "getBooksByAuthor",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "author",
            "in": "path",
            "description": "Author of book/s",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "definitions": {
    "Book": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "hex(24)",
          "description": "objectID - Hexformat at length of 24"
        },
        "title": {
          "type": "string",
          "format": "",
          "description": "Book Title"
        },
        "isbn": {
          "type": "string",
          "format": "",
          "description": "ISBN of book"
        },
        "publishedYear": {
          "type": "number",
          "format": "",
          "description": "Year the ISBN book edition were published"
        },
        "description": {
          "type": "string",
          "format": "",
          "description": "Books description"
        },
        "auhtor": {
          "type": "string",
          "format": "",
          "description": "Name of author"
        },
        "image": {
          "type": "string",
          "format": "URI",
          "description": "string URL to image"
        }
      },
      "xml": {
        "name": "book"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}